- name: Check if bahmni-reports rpm needs an update
  command: yum list installed bahmni-reports
  register: installed_bahmni_reports
  ignore_errors: true

- name: Uninstall bahmni-reports rpm
  yum: name="bahmni-reports" state=absent
  when: installed_bahmni_reports.stdout.find("{{ bahmni_reports_version }}") == -1

- name: Install bahmni-reports from bahmni-repo
  yum: name="bahmni-reports-{{ bahmni_reports_version }}" state=present

- name: Copy bahmni-reports config
  template:
    src=bahmni-reports.conf.j2
    dest=/opt/bahmni-reports/etc/bahmni-reports.conf
    mode=644
    owner={{ bahmni_user }}
    group={{ bahmni_group }}

- name: Copy bahmni-reports properties
  template:
    src=bahmni-reports.properties.j2
    dest=/opt/bahmni-reports/etc/bahmni-reports.properties
    mode=644
    owner={{ bahmni_user }}
    group={{ bahmni_group }}

- name: Get matched IpTable rule
  shell: iptables -nL --line-numbers | grep BAHMNIREPORTS  -m 1 | cut -c 1-2
  register: matchedRule

- name: delete matching rule if exists
  shell: iptables -D INPUT {{ matchedRule.stdout }}
  when: matchedRule.stdout!=""

- name: Allow bahmni-lab port through firewall
  command: /sbin/iptables -I INPUT 1 -p tcp --dport  {{ bahmni_reports_port }} -j ACCEPT -m comment --comment "BAHMNIREPORTS"

- name: save iptables
  command: service iptables save

- name: Switch off chkconfig for bahmni-reports on passive
  service: name=bahmni-reports state=stopped enabled=no
  when: passive is defined and passive == 'yes'

- name: Stop bahmni-reports
  service:
    name=bahmni-reports
    state=stopped
  when: passive is not defined or passive != 'yes'
  tags: stop_bahmni

- name: Start bahmni-reports and enable at boot
  service:
    name=bahmni-reports
    enabled=yes
    state=started
  when: passive is not defined or passive != 'yes'
  tags: start_bahmni

- name: Check bahmni-reports
  command: service bahmni-reports status
  when: passive is not defined or passive != 'yes'
  tags: check_status
