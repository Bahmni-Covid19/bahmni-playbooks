- name: Check if bahmni-lab rpm needs an update
  command: yum list installed bahmni-lab
  register: installed_bahmni_lab
  ignore_errors: true

- name: Uninstall bahmni-lab rpm
  yum: name="bahmni-lab" state=absent
  when: installed_bahmni_lab.stdout.find("{{ bahmni_lab_version }}") == -1

- name: Install bahmni-lab from bahmni-repo
  yum: name="bahmni-lab-{{ bahmni_lab_version }}" state=present

- name: Copy bahmni-lab config
  template:
    src=bahmni-lab.conf.j2
    dest=/etc/bahmni-lab/bahmni-lab.conf
    mode=644
    owner={{ bahmni_user }}
    group={{ bahmni_group }}

- name: Copy hibernate config
  template:
    src=hibernate.cfg.xml.j2
    dest=/opt/bahmni-lab/bahmni-lab/WEB-INF/classes/us/mn/state/health/lims/hibernate/hibernate.cfg.xml
    mode=644
    owner={{ bahmni_user }}
    group={{ bahmni_group }}

- name: Copy log4j config
  template:
    src=log4j.xml.j2
    dest=/opt/bahmni-lab/bahmni-lab/WEB-INF/classes/
    mode=644
    owner={{ bahmni_user }}
    group={{ bahmni_group }}

- name: Copy atomfeed properties
  template:
    src=atomfeed.properties.j2
    dest=/opt/bahmni-lab/bahmni-lab/WEB-INF/classes/atomfeed.properties
    mode=644
    owner={{ bahmni_user }}
    group={{ bahmni_group }}

- name: Get matched IpTable rule
  shell: iptables -nL --line-numbers | grep BAHMNILAB  -m 1 | cut -c 1-2
  register: matchedRule

- name: delete matching rule if exists
  shell: iptables -D INPUT {{ matchedRule.stdout }}
  when: matchedRule.stdout!=""

- name: Allow bahmni-lab port through firewall
  command: /sbin/iptables -I INPUT 1 -p tcp --dport  {{ bahmni_lab_port }} -j ACCEPT -m comment --comment "BAHMNILAB"

- name: save iptables
  command: service iptables save

- name: Switch off chkconfig for bahmni-lab on passive
  service: name=bahmni-lab state=stopped enabled=no
  when: passive is defined and passive == 'yes'

- name: Stop bahmni-lab
  service:
    name=bahmni-lab
    state=stopped
  when: passive is not defined or passive != 'yes'
  tags: stop_bahmni

- name: Run openelis liquibase migrations of implementation config
  script: run-implementation-openelis-liquibase.sh

- name: Start bahmni-lab and enable at boot
  service:
    name=bahmni-lab
    enabled=yes
    state=started
  when: passive is not defined or passive != 'yes'
  tags: start_bahmni

- name: Check bahmni-lab
  command: service bahmni-lab status
  when: passive is not defined or passive != 'yes'
  tags: check_status
