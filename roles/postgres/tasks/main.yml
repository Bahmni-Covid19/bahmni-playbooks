- name: Check if postgres yum repo rpm is present
  stat: path={{postgres_repo_rpm_location}}
  register: postgresRepoRpm

- name: Download postgres yum repo rpm if not present
  command: "wget -q -O {{ postgres_repo_rpm_location }} {{postgres_repo_download_url}} creates={{ postgres_repo_rpm_location }}"
  when: postgresRepoRpm.stat.exists == false

- name: Install postgresql yum repository
  yum: name={{postgres_repo_rpm_location}} state=present

- name: Install python-psycopg2
  yum: name=python-psycopg2 state=present

- name: Install postgresql
  yum: name="postgresql92-server" state=present

- name: Install postgresql-contrib
  yum: name="postgresql92-contrib" state=present

- name: Stop PostgreSQL
  service:
    name=postgresql-9.2
    state=stopped
  ignore_errors: true
  tags: stop_bahmni

- name: Initiate database
  command: service postgresql-9.2 initdb creates=/var/lib/pgsql/data/postgresql.conf

- name: Copy postgresql conf
  template:
    src=postgresql.conf.j2
    dest=/var/lib/pgsql/9.2/data/postgresql.conf
    owner=postgres
    group=postgres
    mode=644

- name: Copy pg_hba conf
  template:
    src=pg_hba.conf.j2
    dest=/var/lib/pgsql/9.2/data/pg_hba.conf
    owner=postgres
    group=postgres
    mode=644
                 
- name: Get matched IpTable rule
  shell: iptables -nL --line-numbers | grep POSTGRES  -m 1 | cut -c 1-2
  register: matchedRule

- name: delete matching rule if exists
  shell: iptables -D INPUT {{ matchedRule.stdout }}
  when: matchedRule.stdout!=""

- name: Allow postgres port through firewall
  command: /sbin/iptables -I INPUT 1 -p tcp --dport  5432 -j ACCEPT -m comment --comment "POSTGRES"

- name: save iptables
  command: service iptables save

- name: Start PostgreSQL and enable at boot
  service:
    name=postgresql-9.2
    enabled=yes
    state=started
  tags: start_bahmni

- name: Check PostgreSQL
  command: service postgresql-9.2 status
  tags: check_status

- name: Create postgres user
  postgresql_user: name={{ postgres_user }} role_attr_flags=CREATEDB,NOCREATEROLE,SUPERUSER,REPLICATION
  sudo_user: postgres
